import unittest
from widget_machine import get_machine 
# assumes widget_machine is a module in a Python file named widget_machine.py and get_machine is a function defined in that file that returns an instance of the widget factory machine.

class TestWidgetMachine(unittest.TestCase):
    
    def test_create_single_widget(self):
        machine = get_machine()
        machine.create_widgets(1)
        self.assertEqual(machine.total_widgets_created, 1)
    
    def test_create_multiple_widgets(self):
        machine = get_machine()
        machine.create_widgets(5)
        self.assertEqual(machine.total_widgets_created, 5)
    
    def test_create_zero_widgets(self):
        machine = get_machine()
        machine.create_widgets(0)
        self.assertEqual(machine.total_widgets_created, 0)
    
    def test_create_negative_widgets(self):
        machine = get_machine()
        with self.assertRaises(ValueError):
            machine.create_widgets(-2)
    
    def test_machine_status_after_creation(self):
        machine = get_machine()
        machine.create_widgets(3)
        self.assertTrue(machine.is_operational())
    
    def test_machine_overload(self):
        machine = get_machine()
        with self.assertRaises(RuntimeError):
            machine.create_widgets(10001)  # Assuming max capacity is 10,000
    
    def test_reset_machine(self):
        machine = get_machine()
        machine.create_widgets(4)
        machine.reset()
        self.assertEqual(machine.total_widgets_created, 0)
    
    def test_machine_shutdown(self):
        machine = get_machine()
        machine.shutdown()
        self.assertFalse(machine.is_operational())
    
    def test_restart_after_shutdown(self):
        machine = get_machine()
        machine.shutdown()
        machine.restart()
        self.assertTrue(machine.is_operational())
    
    def test_insufficient_materials(self):
        machine = get_machine()
        machine.set_materials(0)  # Assuming this method exists
        with self.assertRaises(RuntimeError):
            machine.create_widgets(1)

if __name__ == "__main__":
    unittest.main()
